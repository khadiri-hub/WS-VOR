<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" namespace="VOR.Core.Domain" assembly="VOR.Core">
  <class name="ParkingQuota" table="PARK_QUOTA">
    <id name="ID" type="Int32">
      <column name="PARK_QUOTA_ID" sql-type="int" not-null="true" unique="true" />
      <generator class="identity" />
    </id>
    <many-to-one name="Parking">
      <column name="PARK_PARKING_ID" sql-type="int" not-null="true" />
    </many-to-one>
    <many-to-one name="Direction">
      <column name="DIR_ID" sql-type="int" not-null="true" />
    </many-to-one>
    <property name="Nom">
      <column name="PARK_QUOTA_NOM" sql-type="varchar" length="50" not-null="true" />
    </property>
    <property name="NomGb">
      <column name="PARK_QUOTA_NOM_GB" sql-type="varchar" length="50" not-null="true" />
    </property>
    <bag name="Places" cascade="all-delete-orphan" lazy="true" inverse="true">
      <key column="PARK_QUOTA_ID" />
      <one-to-many class="ParkingQuotaPlace" />
    </bag>
    <bag name="Referents" cascade="all-delete-orphan" lazy="true" inverse="true">
      <key column="PARK_QUOTA_ID" />
      <one-to-many class="ParkingQuotaReferent" />
    </bag>
  </class>
  <sql-query name="GetVueReferentQuota">
    <![CDATA[   
      SELECT distinct
      personRef.PER_ID AS ID
      ,personRef.PER_NOM AS Nom
      ,personRef.PER_PRENOM AS Prenom
      FROM PARK_QUOTA quota
      INNER JOIN PARK_QUOTA_REFERENT quotaReferent
      ON quota.PARK_QUOTA_ID = quotaReferent.PARK_QUOTA_ID
      INNER JOIN TFR_PERSON_FFT personFFT	
      ON quotaReferent.PER_ID = personFFT.PER_ID
      INNER JOIN T_PERSON_REF personRef
      ON personRef.PER_ID = personFFT.PER_ID
    ]]>
  </sql-query>
  <sql-query name="GetVueQuotaParking">
    <![CDATA[   
    ;WITH CTE AS
    (
    SELECT
    quota.PARK_QUOTA_ID AS ID
    ,quota.PARK_QUOTA_NOM AS Nom
    ,direction.DIR_NOM AS Direction
    ,parking.PARK_PARKING_NOM AS Parking
    ,typeVehicule.PARK_TYPE_VEHICULE_NOM AS TypeVehicule
    ,titreAcces.TITRE_ACCES_TYPE_NOM AS TypeParking
    ,titreAccesSupport.TITRE_ACCES_SUPPORT_NOM AS TypeSupport
    ,COUNT(personRef.PER_ID) AS NbrReferent
    ,parking.CAL_NUM_JOURNEE_DEBUT AS NumJourneeDebut
    ,parking.CAL_NUM_JOURNEE_FIN AS NumJourneeFin
    FROM PARK_QUOTA quota
    INNER JOIN PARK_PARKING parking
    ON quota.PARK_PARKING_ID = parking.PARK_PARKING_ID
    INNER JOIN T_DIRECTION direction
    ON direction.DIR_ID = quota.DIR_ID
    INNER JOIN PARK_TYPE_VEHICULE typeVehicule
    ON typeVehicule.PARK_TYPE_VEHICULE_ID = parking.PARK_TYPE_VEHICULE_ID
    INNER JOIN T_TITRE_ACCES_TYPE titreAcces
    ON titreAcces.TITRE_ACCES_TYPE_ID = parking.TITRE_ACCES_TYPE_ID
    INNER JOIN T_TITRE_ACCES_SUPPORT titreAccesSupport
    ON titreAccesSupport.TITRE_ACCES_SUPPORT_ID = parking.TITRE_ACCES_SUPPORT_ID
    INNER JOIN PARK_QUOTA_REFERENT quotaReferent
    ON quotaReferent.PARK_QUOTA_ID = quota.PARK_QUOTA_ID
    INNER JOIN T_PERSON_REF personRef
    ON personRef.PER_ID = quotaReferent.PER_ID
    WHERE direction.DIR_ID = ISNULL(:directionId, direction.DIR_ID)
    AND parking.PARK_PARKING_ID = ISNULL(:parkingId, parking.PARK_PARKING_ID)
    AND personRef.PER_ID = ISNULL(:referentId, personRef.PER_ID)
    GROUP BY
    quota.PARK_QUOTA_ID
    ,quota.PARK_QUOTA_NOM
    ,direction.DIR_NOM
    ,parking.PARK_PARKING_NOM
    ,typeVehicule.PARK_TYPE_VEHICULE_NOM
    ,titreAcces.TITRE_ACCES_TYPE_NOM
    ,titreAccesSupport.TITRE_ACCES_SUPPORT_NOM
    ,parking.CAL_NUM_JOURNEE_DEBUT
    ,parking.CAL_NUM_JOURNEE_FIN
    )
    SELECT *
    ,(
    SELECT tCal.CAL_DATE_JOUR
    FROM T_CAL tCal
    WHERE tCal.CAL_NUM_JOURNEE = CTE.NumJourneeDebut AND tcal.CAL_EVT_ID = :eventID
    ) AS JourneeDebut
    ,(
    SELECT tCal.CAL_DATE_JOUR
    FROM T_CAL tCal
    WHERE tCal.CAL_NUM_JOURNEE = CTE.NumJourneeFin AND tcal.CAL_EVT_ID = :eventID
    ) AS JourneeFin

    FROM CTE
    ]]>
  </sql-query>
  <sql-query name="GetNbrPlacesAttribuees">
    <![CDATA[
      SELECT
	      ISNULL(SUM(compteQupta.COMPTE_PARAMETRE_PARKING_QUOTA_NB), 0)
      FROM TFR_COMPTE_PARAMETRE_PARKING_QUOTA compteQupta
      INNER JOIN PARK_QUOTA_PLACE quotaPlace ON quotaPlace.PARK_QUOTA_PLACE_ID = compteQupta.PARK_QUOTA_PLACE_ID
      INNER JOIN PARK_QUOTA quota ON quota.PARK_QUOTA_ID = quotaPlace.PARK_QUOTA_ID 
      WHERE quota.PARK_QUOTA_ID = :quotaId
    ]]>
  </sql-query>
</hibernate-mapping>